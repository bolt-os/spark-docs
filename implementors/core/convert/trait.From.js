(function() {var implementors = {
"anyhow":[["impl From&lt;<a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; for Box&lt;dyn StdError + Send + 'static&gt;"],["impl From&lt;<a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; for Box&lt;dyn StdError + 'static&gt;"],["impl From&lt;<a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; for Box&lt;dyn StdError + Send + Sync + 'static&gt;"]],
"elf":[["impl From&lt;isize&gt; for <a class=\"enum\" href=\"elf/enum.DynTag.html\" title=\"enum elf::DynTag\">DynTag</a>"]],
"gimli":[["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugLocLists.html\" title=\"struct gimli::read::DebugLocLists\">DebugLocLists</a>&lt;R&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugTuIndex.html\" title=\"struct gimli::read::DebugTuIndex\">DebugTuIndex</a>&lt;R&gt;"],["impl&lt;T&gt; From&lt;<a class=\"struct\" href=\"gimli/struct.DebugTypesOffset.html\" title=\"struct gimli::DebugTypesOffset\">DebugTypesOffset</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"gimli/enum.UnitSectionOffset.html\" title=\"enum gimli::UnitSectionOffset\">UnitSectionOffset</a>&lt;T&gt;"],["impl&lt;R: <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugFrame.html\" title=\"struct gimli::read::DebugFrame\">DebugFrame</a>&lt;R&gt;"],["impl&lt;R: <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.EhFrame.html\" title=\"struct gimli::read::EhFrame\">EhFrame</a>&lt;R&gt;"],["impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"gimli/struct.EhFrameOffset.html\" title=\"struct gimli::EhFrameOffset\">EhFrameOffset</a>&lt;T&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugRngLists.html\" title=\"struct gimli::read::DebugRngLists\">DebugRngLists</a>&lt;R&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugCuIndex.html\" title=\"struct gimli::read::DebugCuIndex\">DebugCuIndex</a>&lt;R&gt;"],["impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"gimli/struct.DebugFrameOffset.html\" title=\"struct gimli::DebugFrameOffset\">DebugFrameOffset</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;<a class=\"struct\" href=\"gimli/struct.DebugInfoOffset.html\" title=\"struct gimli::DebugInfoOffset\">DebugInfoOffset</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"gimli/enum.UnitSectionOffset.html\" title=\"enum gimli::UnitSectionOffset\">UnitSectionOffset</a>&lt;T&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugAddr.html\" title=\"struct gimli::read::DebugAddr\">DebugAddr</a>&lt;R&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugStrOffsets.html\" title=\"struct gimli::read::DebugStrOffsets\">DebugStrOffsets</a>&lt;R&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugRanges.html\" title=\"struct gimli::read::DebugRanges\">DebugRanges</a>&lt;R&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugLineStr.html\" title=\"struct gimli::read::DebugLineStr\">DebugLineStr</a>&lt;R&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugStr.html\" title=\"struct gimli::read::DebugStr\">DebugStr</a>&lt;R&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugLoc.html\" title=\"struct gimli::read::DebugLoc\">DebugLoc</a>&lt;R&gt;"],["impl&lt;R: <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a>&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.EhFrameHdr.html\" title=\"struct gimli::read::EhFrameHdr\">EhFrameHdr</a>&lt;R&gt;"],["impl&lt;R&gt; From&lt;R&gt; for <a class=\"struct\" href=\"gimli/read/struct.DebugAranges.html\" title=\"struct gimli::read::DebugAranges\">DebugAranges</a>&lt;R&gt;"]],
"libsa":[["impl From&lt;u16&gt; for <a class=\"struct\" href=\"libsa/endian/struct.LittleEndianU16.html\" title=\"struct libsa::endian::LittleEndianU16\">LittleEndianU16</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.LittleEndianI32.html\" title=\"struct libsa::endian::LittleEndianI32\">LittleEndianI32</a>&gt; for i32"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.LittleEndianI16.html\" title=\"struct libsa::endian::LittleEndianI16\">LittleEndianI16</a>&gt; for i16"],["impl From&lt;u64&gt; for <a class=\"struct\" href=\"libsa/endian/struct.BigEndianU64.html\" title=\"struct libsa::endian::BigEndianU64\">BigEndianU64</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.BigEndianU32.html\" title=\"struct libsa::endian::BigEndianU32\">BigEndianU32</a>&gt; for u32"],["impl From&lt;i16&gt; for <a class=\"struct\" href=\"libsa/endian/struct.BigEndianI16.html\" title=\"struct libsa::endian::BigEndianI16\">BigEndianI16</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.LittleEndianU32.html\" title=\"struct libsa::endian::LittleEndianU32\">LittleEndianU32</a>&gt; for u32"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.LittleEndianIsize.html\" title=\"struct libsa::endian::LittleEndianIsize\">LittleEndianIsize</a>&gt; for isize"],["impl From&lt;i32&gt; for <a class=\"struct\" href=\"libsa/endian/struct.LittleEndianI32.html\" title=\"struct libsa::endian::LittleEndianI32\">LittleEndianI32</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.LittleEndianU16.html\" title=\"struct libsa::endian::LittleEndianU16\">LittleEndianU16</a>&gt; for u16"],["impl From&lt;isize&gt; for <a class=\"struct\" href=\"libsa/endian/struct.BigEndianIsize.html\" title=\"struct libsa::endian::BigEndianIsize\">BigEndianIsize</a>"],["impl From&lt;i32&gt; for <a class=\"struct\" href=\"libsa/endian/struct.BigEndianI32.html\" title=\"struct libsa::endian::BigEndianI32\">BigEndianI32</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.BigEndianI64.html\" title=\"struct libsa::endian::BigEndianI64\">BigEndianI64</a>&gt; for i64"],["impl From&lt;i64&gt; for <a class=\"struct\" href=\"libsa/endian/struct.LittleEndianI64.html\" title=\"struct libsa::endian::LittleEndianI64\">LittleEndianI64</a>"],["impl From&lt;i16&gt; for <a class=\"struct\" href=\"libsa/endian/struct.LittleEndianI16.html\" title=\"struct libsa::endian::LittleEndianI16\">LittleEndianI16</a>"],["impl From&lt;i64&gt; for <a class=\"struct\" href=\"libsa/endian/struct.BigEndianI64.html\" title=\"struct libsa::endian::BigEndianI64\">BigEndianI64</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.LittleEndianUsize.html\" title=\"struct libsa::endian::LittleEndianUsize\">LittleEndianUsize</a>&gt; for usize"],["impl From&lt;usize&gt; for <a class=\"struct\" href=\"libsa/endian/struct.BigEndianUsize.html\" title=\"struct libsa::endian::BigEndianUsize\">BigEndianUsize</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.LittleEndianU64.html\" title=\"struct libsa::endian::LittleEndianU64\">LittleEndianU64</a>&gt; for u64"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.BigEndianI32.html\" title=\"struct libsa::endian::BigEndianI32\">BigEndianI32</a>&gt; for i32"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.BigEndianU16.html\" title=\"struct libsa::endian::BigEndianU16\">BigEndianU16</a>&gt; for u16"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.BigEndianUsize.html\" title=\"struct libsa::endian::BigEndianUsize\">BigEndianUsize</a>&gt; for usize"],["impl From&lt;u32&gt; for <a class=\"struct\" href=\"libsa/endian/struct.LittleEndianU32.html\" title=\"struct libsa::endian::LittleEndianU32\">LittleEndianU32</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.BigEndianIsize.html\" title=\"struct libsa::endian::BigEndianIsize\">BigEndianIsize</a>&gt; for isize"],["impl From&lt;u16&gt; for <a class=\"struct\" href=\"libsa/endian/struct.BigEndianU16.html\" title=\"struct libsa::endian::BigEndianU16\">BigEndianU16</a>"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.BigEndianI16.html\" title=\"struct libsa::endian::BigEndianI16\">BigEndianI16</a>&gt; for i16"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.BigEndianU64.html\" title=\"struct libsa::endian::BigEndianU64\">BigEndianU64</a>&gt; for u64"],["impl From&lt;<a class=\"struct\" href=\"libsa/endian/struct.LittleEndianI64.html\" title=\"struct libsa::endian::LittleEndianI64\">LittleEndianI64</a>&gt; for i64"],["impl From&lt;usize&gt; for <a class=\"struct\" href=\"libsa/endian/struct.LittleEndianUsize.html\" title=\"struct libsa::endian::LittleEndianUsize\">LittleEndianUsize</a>"],["impl From&lt;u32&gt; for <a class=\"struct\" href=\"libsa/endian/struct.BigEndianU32.html\" title=\"struct libsa::endian::BigEndianU32\">BigEndianU32</a>"],["impl From&lt;u64&gt; for <a class=\"struct\" href=\"libsa/endian/struct.LittleEndianU64.html\" title=\"struct libsa::endian::LittleEndianU64\">LittleEndianU64</a>"],["impl From&lt;isize&gt; for <a class=\"struct\" href=\"libsa/endian/struct.LittleEndianIsize.html\" title=\"struct libsa::endian::LittleEndianIsize\">LittleEndianIsize</a>"]],
"lock_api":[["impl&lt;R: <a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a>, T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;"],["impl&lt;R: <a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a>, G: <a class=\"trait\" href=\"lock_api/trait.GetThreadId.html\" title=\"trait lock_api::GetThreadId\">GetThreadId</a>, T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;"],["impl&lt;R: <a class=\"trait\" href=\"lock_api/trait.RawRwLock.html\" title=\"trait lock_api::RawRwLock\">RawRwLock</a>, T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;"]],
"spark":[["impl <a class=\"trait\" href=\"spark/prelude/trait.From.html\" title=\"trait spark::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"spark/fs/fat/dir/struct.DirAttrs.html\" title=\"struct spark::fs::fat::dir::DirAttrs\">DirAttrs</a>&gt; for <a class=\"enum\" href=\"spark/fs/enum.FileType.html\" title=\"enum spark::fs::FileType\">FileType</a>"],["impl <a class=\"trait\" href=\"spark/prelude/trait.From.html\" title=\"trait spark::prelude::From\">From</a>&lt;<a class=\"enum\" href=\"spark/io/enum.Error.html\" title=\"enum spark::io::Error\">Error</a>&gt; for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>"],["impl <a class=\"trait\" href=\"spark/prelude/trait.From.html\" title=\"trait spark::prelude::From\">From</a>&lt;<a class=\"enum\" href=\"limine/enum.PagingMode.html\" title=\"enum limine::PagingMode\">PagingMode</a>&gt; for <a class=\"enum\" href=\"spark/mem/vmm/enum.PagingMode.html\" title=\"enum spark::mem::vmm::PagingMode\">PagingMode</a>"],["impl <a class=\"trait\" href=\"spark/prelude/trait.From.html\" title=\"trait spark::prelude::From\">From</a>&lt;<a class=\"enum\" href=\"spark/mem/vmm/enum.PagingMode.html\" title=\"enum spark::mem::vmm::PagingMode\">PagingMode</a>&gt; for <a class=\"enum\" href=\"limine/enum.PagingMode.html\" title=\"enum limine::PagingMode\">PagingMode</a>"],["impl <a class=\"trait\" href=\"spark/prelude/trait.From.html\" title=\"trait spark::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"elf/segment/struct.SegmentFlags.html\" title=\"struct elf::segment::SegmentFlags\">SegmentFlags</a>&gt; for <a class=\"struct\" href=\"spark/mem/vmm/struct.MapFlags.html\" title=\"struct spark::mem::vmm::MapFlags\">MapFlags</a>"]],
"spin":[["impl&lt;T, R&gt; From&lt;T&gt; for <a class=\"struct\" href=\"spin/mutex/struct.Mutex.html\" title=\"struct spin::mutex::Mutex\">Mutex</a>&lt;T, R&gt;"],["impl&lt;T, R&gt; From&lt;T&gt; for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutex.html\" title=\"struct spin::mutex::spin::SpinMutex\">SpinMutex</a>&lt;T, R&gt;"],["impl&lt;T, R&gt; From&lt;T&gt; for <a class=\"struct\" href=\"spin/rwlock/struct.RwLock.html\" title=\"struct spin::rwlock::RwLock\">RwLock</a>&lt;T, R&gt;"],["impl&lt;T, R&gt; From&lt;T&gt; for <a class=\"struct\" href=\"spin/once/struct.Once.html\" title=\"struct spin::once::Once\">Once</a>&lt;T, R&gt;"]],
"uuid":[["impl From&lt;<a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>&gt; for <a class=\"struct\" href=\"uuid/fmt/struct.Simple.html\" title=\"struct uuid::fmt::Simple\">Simple</a>"],["impl From&lt;<a class=\"struct\" href=\"uuid/fmt/struct.Braced.html\" title=\"struct uuid::fmt::Braced\">Braced</a>&gt; for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>"],["impl From&lt;<a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>&gt; for <a class=\"struct\" href=\"uuid/fmt/struct.Braced.html\" title=\"struct uuid::fmt::Braced\">Braced</a>"],["impl From&lt;<a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>&gt; for <a class=\"struct\" href=\"uuid/fmt/struct.Urn.html\" title=\"struct uuid::fmt::Urn\">Urn</a>"],["impl From&lt;<a class=\"struct\" href=\"uuid/fmt/struct.Urn.html\" title=\"struct uuid::fmt::Urn\">Urn</a>&gt; for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>"],["impl From&lt;<a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>&gt; for <a class=\"struct\" href=\"uuid/fmt/struct.Hyphenated.html\" title=\"struct uuid::fmt::Hyphenated\">Hyphenated</a>"],["impl From&lt;<a class=\"struct\" href=\"uuid/fmt/struct.Simple.html\" title=\"struct uuid::fmt::Simple\">Simple</a>&gt; for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>"],["impl From&lt;<a class=\"struct\" href=\"uuid/fmt/struct.Hyphenated.html\" title=\"struct uuid::fmt::Hyphenated\">Hyphenated</a>&gt; for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()